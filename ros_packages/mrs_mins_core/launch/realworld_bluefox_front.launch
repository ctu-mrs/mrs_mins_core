<launch>

  <arg name="UAV_NAME" default="$(env UAV_NAME)" />
  <arg name="RUN_TYPE" default="realworld" />

  <arg name="config" default="realworld/bluefox_front" />

  <arg name="node_prefix" default=""/>

  <arg name="vio_imu_frame" default="$(arg UAV_NAME)/vio_imu" />
  <arg name="fcu_frame" default="$(arg UAV_NAME)/fcu" />

  <arg name="device" default="$(env BLUEFOX)" />
  <arg name="camera_name" default="bluefox_vio_front" />


  <group ns="$(arg UAV_NAME)" >

<!--//{ bluefox2 -->
<include file="$(find bluefox2)/launch/single_nodelet.launch">

  <!-- Camera Settings -->
  <arg name="plugin" value="false" />
  <arg name="manager" value="" />
  <arg name="camera_name" value="$(arg camera_name)" />

  <arg name="aec" value="1" />
  <arg name="ctm" value="3" />
  <arg name="max_expose_jump" value="10000" />
  <arg name="expose_upper_limit_us" default="50000"/>
  <arg name="calib_url" value="file://$(find mrs_open_vins_core)/calibration/mv_$(arg    device).yaml" />
</include>
<!--//}-->


<!--//{ run mins -->
    <node name="mins_subscribe" pkg="mins" type="subscribe" output="screen" >
    <!-- <node name="mins_subscribe" pkg="mins" type="subscribe" output="screen" launch-prefix="debug_roslaunch" > -->
      <param name="config_path"       type="str"  value="$(find mrs_mins_core)/config/$(arg config)/config.yaml" />

      <!-- namespace -->
      <param name="uav_name" type="str" value="$(arg UAV_NAME)" />

      <!-- tf frames -->
      <param name="frame/fcu" type="str" value="$(arg UAV_NAME)/fcu" />
      <param name="frame/global" type="str" value="$(arg UAV_NAME)/$(arg node_prefix)mins_global" />
      <param name="frame/map" type="str" value="$(arg UAV_NAME)/$(arg node_prefix)mins_map" />
      <param name="frame/imu" type="str" value="$(arg UAV_NAME)/$(arg node_prefix)mins_imu" />
      <param name="frame/cam" type="str" value="$(arg UAV_NAME)/$(arg node_prefix)mins_cam" />
      <param name="frame/lidar" type="str" value="$(arg UAV_NAME)/$(arg node_prefix)mins_lidar" />
      <param name="frame/gps" type="str" value="$(arg UAV_NAME)/$(arg node_prefix)mins_gps" />
      <param name="frame/wheel" type="str" value="$(arg UAV_NAME)/$(arg node_prefix)mins_wheel" />
      <param name="frame/vicon" type="str" value="$(arg UAV_NAME)/$(arg node_prefix)mins_vicon" />
      <param name="frame/clone_enabled" type="bool" value="false" />
      <param name="frame/clone" type="str" value="$(arg UAV_NAME)/$(arg node_prefix)mins_c" />

      <remap from="/mins/cam/msckf" to="$(arg node_prefix)mins/cam/msckf" />
      <remap from="/mins/cam/num_msckf" to="$(arg node_prefix)mins/cam/num_msckf" />
      <remap from="/mins/cam/slam" to="$(arg node_prefix)mins/cam/slam" />
      <remap from="/mins/cam/num_slam" to="$(arg node_prefix)mins/cam/num_slam" />
      <remap from="/mins/cam/timing" to="$(arg node_prefix)mins/cam/timing" />
      <remap from="/mins/cam0/track_img" to="$(arg node_prefix)mins/cam0/track_img" />
      <remap from="/mins/cam1/track_img" to="$(arg node_prefix)mins/cam1/track_img" />
      <remap from="/mins/cam/num_tracks" to="$(arg node_prefix)mins/cam/num_tracks" />
      <remap from="/mins/imu/pose" to="$(arg node_prefix)mins/imu/pose" />
      <remap from="/mins/imu/odom" to="$(arg node_prefix)mins/imu/odom" />
      <remap from="/mins/imu/path" to="$(arg node_prefix)mins/imu/path" />
      <remap from="/mins/imu/timing" to="$(arg node_prefix)mins/imu/timing" />
      <remap from="/mins/lidar/timing" to="$(arg node_prefix)mins/lidar/timing" />
      <remap from="/mins/lidar0/map" to="$(arg node_prefix)mins/lidar0/map" />
      <remap from="/mins/lidar0/points" to="$(arg node_prefix)mins/lidar0/points" />
      <remap from="/mins/lidar0/map_input_points" to="$(arg node_prefix)mins/lidar0/map_input_points" />

    </node>
<!--//}-->

<!--//{ publish static tfs -->
    <!-- tf for transforming vio imu to fcu frame -->
    <node pkg="tf2_ros" type="static_transform_publisher" name="tf_fcu_to_vio_imu" args="0.10 0.0 -0.10 -1.5708 0.0 -1.5708 $(arg fcu_frame) $(arg vio_imu_frame) " /> 

    <!-- tf for connecting mins tf tree with the main tf tree -->
    <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="tf_fcu_to_mins_imu" args="0.0 0.0 0.0 0.0 0.0 0.0 $(arg fcu_frame) $(arg mins_imu_frame)" /> -->
<!--//}-->

<!--//{ transforms imu measurements to fcu frame -->
    <node name="imu_transformer" pkg="imu_transformer" type="imu_transformer_node" output="screen" >
      <param name="target_frame" type="str" value="$(arg fcu_frame)" />

        <remap from="imu_in/data" to="vio_imu/imu_filtered" />
        <remap from="imu_out/data" to="vio_imu/imu_filtered_fcu" />
    </node>
<!--//}-->
  
<!--//{ decompress compressed images to image raw from rosbag -->
    <node name="republish_cam0" type="republish" pkg="image_transport" output="screen" args="compressed in:=/$(arg UAV_NAME)/bluefox_vio_front/image_raw raw out:=/$(arg UAV_NAME)/bluefox_vio_front/image_raw" />
<!--//}-->

  </group>

<!--//{ vio_imu -->
  <include file="$(find mrs_serial)/launch/vio_imu.launch">
  </include>
<!--//}-->

<!--//{ filter imu -->
    <include file="$(find mrs_vins_imu_filter)/launch/filter_icm_42688.launch">
    </include>
<!--//}-->

</launch>

