<?xml version="1.0"?>
<launch>

    <arg name="UAV_NAME"   default="$(env UAV_NAME)" /> 

    <group ns="$(arg UAV_NAME)">

      <arg name="pass_tf_args_as_params" default="false" />
      <arg name="imu_from_descr" default="false" />
      <arg name="override_cam_model" default="false" />

      <arg name="name" default="oak" />
      <arg name="params_file" default="$(find mrs_mins_core)/config/realworld/oak_front/oak_mins.yaml"/>
      <arg name="camera_model" default="OAK-D" />

      <arg name="base_frame" default="$(arg UAV_NAME)/$(arg name)" />
      <arg name="parent_frame" default="$(arg UAV_NAME)/$(arg name)_base" />

      <arg name="cam_pos_x" default="0.0" />
      <!-- Position respect to base frame (i.e. "base_link) -->
      <arg name="cam_pos_y" default="0.0" />
      <!-- Position respect to base frame (i.e. "base_link) -->
      <arg name="cam_pos_z" default="0.0" />
      <!-- Position respect to base frame (i.e. "base_link) -->
      <arg name="cam_roll" default="0.0" />
      <!-- Orientation respect to base frame (i.e. "base_link) -->
      <arg name="cam_pitch" default="0.0" />
      <!-- Orientation respect to base frame (i.e. "base_link) -->
      <arg name="cam_yaw" default="0.0" />
      <!-- Orientation respect to base frame (i.e. "base_link) -->

      <param name="$(arg name)/camera_i_camera_model" value="$(arg camera_model)" if="$(arg override_cam_model)"/> 
      <param name="$(arg name)/camera_i_base_frame" value="$(arg base_frame)"/>
      <param name="$(arg name)/camera_i_parent_frame" value="$(arg parent_frame)"/>
      <param name="$(arg name)/camera_i_cam_pos_x" value="$(arg cam_pos_x)"/>
      <param name="$(arg name)/camera_i_cam_pos_y" value="$(arg cam_pos_y)"/>
      <param name="$(arg name)/camera_i_cam_pos_z" value="$(arg cam_pos_z)"/>
      <param name="$(arg name)/camera_i_cam_roll" value="$(arg cam_roll)"/>
      <param name="$(arg name)/camera_i_cam_pitch" value="$(arg cam_pitch)"/>
      <param name="$(arg name)/camera_i_cam_yaw" value="$(arg cam_yaw)"/>
      <param name="$(arg name)/camera_i_imu_from_descr" value="$(arg imu_from_descr)"/>
      <param name="$(arg name)/camera_i_publish_tf_from_calibration" value="$(arg pass_tf_args_as_params)"/>

      <arg name="launch_prefix" default=""/>


      <node pkg="rosservice" if="$(optenv DEPTHAI_DEBUG 0)" type="rosservice" name="set_log_level" args="call --wait /oak_nodelet_manager/set_logger_level 'ros.depthai_ros_driver' 'debug'" />

      <!-- <include unless="$(arg pass_tf_args_as_params)" file="$(find mrs_mins_core)/launch/oak_tfs.launch"> -->
      <!--     <arg name="base_frame" value="$(arg  base_frame)" /> -->
      <!--     <arg name="parent_frame" value="$(arg  parent_frame)"/> -->
      <!--     <arg name="camera_model" value="$(arg  camera_model)"/> -->
      <!--     <arg name="tf_prefix" value="$(arg  UAV_NAME)/$(arg  name)" /> -->
      <!--     <arg name="cam_pos_x" value="$(arg  cam_pos_x)" /> -->
      <!--     <arg name="cam_pos_y" value="$(arg  cam_pos_y)" /> -->
      <!--     <arg name="cam_pos_z" value="$(arg  cam_pos_z)" /> -->
      <!--     <arg name="cam_roll" value="$(arg  cam_roll)" /> -->
      <!--     <arg name="cam_pitch" value="$(arg  cam_pitch)" /> -->
      <!--     <arg name="cam_yaw" value="$(arg  cam_yaw)" /> -->
      <!-- </include> -->

      <node pkg="nodelet" type="nodelet" name="$(arg  name)_nodelet_manager"  launch-prefix="$(arg launch_prefix)" args="manager" output="screen">
          <remap from="/nodelet_manager/load_nodelet" to="$(arg name)/nodelet_manager/load_nodelet"/>
          <remap from="/nodelet_manager/unload_nodelet" to="$(arg name)/nodelet_manager/unload_nodelet"/>
          <remap from="/nodelet_manager/list" to="$(arg name)/nodelet_manager/list"/>
      </node>

    <rosparam file="$(arg params_file)" />
      <node name="$(arg  name)" pkg="nodelet" type="nodelet" output="screen" required="true" args="load depthai_ros_driver/Camera $(arg  name)_nodelet_manager">
      <!-- <rosparam file="$(arg params_file)" /> -->
      </node>

      <!-- <node name="overlay" pkg="nodelet" type="nodelet" output="screen" required="true" args="load depthai_filters/Person2DOverlay $(arg  name)_nodelet_manager"> -->
      <!--     <remap from="/rgb/preview/image_raw" to="$(arg name)/nn/passthrough/image_raw"/> -->
      <!--     <remap from="/nn/detections" to="$(arg name)/nn/detections"/> -->
      <!--     <remap from="~overlay" to="$(arg name)/nn/overlay"/> -->
      <!-- </node> -->

      <!-- <node name="overlay_compressed" pkg="image_transport" type="republish" output="screen" required="true" -->
      <!--     args="raw in:=$(arg name)/nn/overlay compressed out:=$(arg name)/nn/overlay" /> -->

    </group>

</launch>
