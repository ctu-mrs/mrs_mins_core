scope_timer:
  enable: false
  log_filename: ""

lidar3d:

  name:      "empty"
  frequency: 10       # [Hz]
  vfov:      90       # [deg]

  republish: false
  keep_organized: true

  clip:
    range:
      use: false
      min: 0.7  # [m]
      max: 40.0 # [m]
    intensity:
      use: false
      threshold: 35
      range: 5.0
    reflectivity:
      use: false
      threshold: 25
      range: 5.0

  cropbox:
    use: true
    crop_inside: true # if true, points inside the box will be cropped, otherwise points outside will be cropped
    frame_id: "fcu"
    min: [-0.5, -0.5, -0.5]
    max: [3.0, 1.0, 0.5]

  ground_removal:
    use: false
    range:
      use: true
    static_frame_id: gps_origin
    max_precrop_height: 2.0
    ransac:
      max_inlier_distance: 0.5
    offset: 1.0
    publish_plane_marker: true

  downsampling:
    dynamic_row_selection: false
    row_step: 2
    col_step: 4

rplidar:
  republish: false
  voxel_resolution: 0.05


depth:
  camera_names: ["picoflexx_left", "picoflexx_right", "picoflexx_back"]
  # camera_names: ["picoflexx_left_old", "picoflexx_right_old", "picoflexx_top_old", "oak_old"]
  
  picoflexx_left:
    frequency: 10 # [Hz]
    vfov: 180      # [deg]
    keep_ordered: true

    topic:
      depth_in: "picoflexx_left/image_depth"
      depth_camera_info_in: "picoflexx_left/camera_info"
      points_out: "picoflexx_left/pcl_filtered"
      points_over_max_range_out: "picoflexx_left/points_over_max_range" # used if non-empty and range_clip used

    filter:
      downsample:
        step:
          row: 1 # used if >1, maintains ordering if keep_ordered=true
          col: 1 # used if >1, maintains ordering if keep_ordered=true
      range_clip:
        min: 0.1
        max: 4.0 # used if >0, maintains ordering if keep_ordered=true
      voxel_grid:
        resolution: 0.2 # used if >0, BREAKS ordering even if keep_ordered=true
      radius_outlier:
        radius: 0.0 # used if both >0, maintains ordering if keep_ordered=true
        neighbors: 2
      minimum_grid:
        resolution: 0.0 # used if >0, BREAKS ordering even if keep_ordered=true
      bilateral:
        sigma_S: 0.0 # used if both >0, BREAKS ordering even if keep_ordered=true
        sigma_R: 0.005 # crashes with bad_alloc error

  picoflexx_right:
    frequency: 10 # [Hz]
    vfov: 180      # [deg]
    keep_ordered: true

    topic:
      depth_in: "picoflexx_right/image_depth"
      depth_camera_info_in: "picoflexx_right/camera_info"
      points_out: "picoflexx_right/pcl_filtered"
      points_over_max_range_out: "picoflexx_right/points_over_max_range" # used if non-empty and range_clip used

    filter:
      downsample:
        step:
          row: 1 # used if >1, maintains ordering if keep_ordered=true
          col: 1 # used if >1, maintains ordering if keep_ordered=true
      range_clip:
        min: 0.1
        max: 4.0 # used if >0, maintains ordering if keep_ordered=true
      voxel_grid:
        resolution: 0.2 # used if >0, BREAKS ordering even if keep_ordered=true
      radius_outlier:
        radius: 0.0 # used if both >0, maintains ordering if keep_ordered=true
        neighbors: 2
      minimum_grid:
        resolution: 0.0 # used if >0, BREAKS ordering even if keep_ordered=true
      bilateral:
        sigma_S: 0.0 # used if both >0, BREAKS ordering even if keep_ordered=true
        sigma_R: 0.005 # crashes with bad_alloc error


  picoflexx_back:
    frequency: 10 # [Hz]
    vfov: 180      # [deg]
    keep_ordered: true

    topic:
      depth_in: "picoflexx_back/image_depth"
      depth_camera_info_in: "picoflexx_back/camera_info"
      points_out: "picoflexx_back/pcl_filtered"
      points_over_max_range_out: "picoflexx_back/points_over_max_range" # used if non-empty and range_clip used

    filter:
      downsample:
        step:
          row: 1 # used if >1, maintains ordering if keep_ordered=true
          col: 1 # used if >1, maintains ordering if keep_ordered=true
      range_clip:
        min: 0.1
        max: 4.0 # used if >0, maintains ordering if keep_ordered=true
      voxel_grid:
        resolution: 0.2 # used if >0, BREAKS ordering even if keep_ordered=true
      radius_outlier:
        radius: 0.0 # used if both >0, maintains ordering if keep_ordered=true
        neighbors: 2
      minimum_grid:
        resolution: 0.0 # used if >0, BREAKS ordering even if keep_ordered=true
      bilateral:
        sigma_S: 0.0 # used if both >0, BREAKS ordering even if keep_ordered=true
        sigma_R: 0.005 # crashes with bad_alloc error

  picoflexx_left_old:
    frequency: 10 # [Hz]
    vfov: 180      # [deg]
    keep_ordered: true

    topic:
      depth_in: "pico_flexx_left/image_depth"
      depth_camera_info_in: "pico_flexx_left/camera_info"
      points_out: "picoflexx_left/pcl_filtered"
      points_over_max_range_out: "picoflexx_left/points_over_max_range" # used if non-empty and range_clip used

    filter:
      downsample:
        step:
          row: 1 # used if >1, maintains ordering if keep_ordered=true
          col: 1 # used if >1, maintains ordering if keep_ordered=true
      range_clip:
        min: 0.1
        max: 4.0 # used if >0, maintains ordering if keep_ordered=true
      voxel_grid:
        resolution: 0.1 # used if >0, BREAKS ordering even if keep_ordered=true
      radius_outlier:
        radius: 0.0 # used if both >0, maintains ordering if keep_ordered=true
        neighbors: 2
      minimum_grid:
        resolution: 0.0 # used if >0, BREAKS ordering even if keep_ordered=true
      bilateral:
        sigma_S: 0.0 # used if both >0, BREAKS ordering even if keep_ordered=true
        sigma_R: 0.005 # crashes with bad_alloc error

  picoflexx_right_old:
    frequency: 10 # [Hz]
    vfov: 180      # [deg]
    keep_ordered: true

    topic:
      depth_in: "pico_flexx_right/image_depth"
      depth_camera_info_in: "pico_flexx_right/camera_info"
      points_out: "picoflexx_right/pcl_filtered"
      points_over_max_range_out: "picoflexx_right/points_over_max_range" # used if non-empty and range_clip used

    filter:
      downsample:
        step:
          row: 1 # used if >1, maintains ordering if keep_ordered=true
          col: 1 # used if >1, maintains ordering if keep_ordered=true
      range_clip:
        min: 0.1
        max: 4.0 # used if >0, maintains ordering if keep_ordered=true
      voxel_grid:
        resolution: 0.1 # used if >0, BREAKS ordering even if keep_ordered=true
      radius_outlier:
        radius: 0.0 # used if both >0, maintains ordering if keep_ordered=true
        neighbors: 2
      minimum_grid:
        resolution: 0.0 # used if >0, BREAKS ordering even if keep_ordered=true
      bilateral:
        sigma_S: 0.0 # used if both >0, BREAKS ordering even if keep_ordered=true
        sigma_R: 0.005 # crashes with bad_alloc error


  picoflexx_top_old:
    frequency: 10 # [Hz]
    vfov: 180      # [deg]
    keep_ordered: true

    topic:
      depth_in: "pico_flexx_top/image_depth"
      depth_camera_info_in: "pico_flexx_top/camera_info"
      points_out: "picoflexx_back/pcl_filtered"
      points_over_max_range_out: "picoflexx_top/points_over_max_range" # used if non-empty and range_clip used

    filter:
      downsample:
        step:
          row: 1 # used if >1, maintains ordering if keep_ordered=true
          col: 1 # used if >1, maintains ordering if keep_ordered=true
      range_clip:
        min: 0.1
        max: 4.0 # used if >0, maintains ordering if keep_ordered=true
      voxel_grid:
        resolution: 0.1 # used if >0, BREAKS ordering even if keep_ordered=true
      radius_outlier:
        radius: 0.0 # used if both >0, maintains ordering if keep_ordered=true
        neighbors: 2
      minimum_grid:
        resolution: 0.0 # used if >0, BREAKS ordering even if keep_ordered=true
      bilateral:
        sigma_S: 0.0 # used if both >0, BREAKS ordering even if keep_ordered=true
        sigma_R: 0.005 # crashes with bad_alloc error

  oak_old:
    frequency: 10 # [Hz]
    vfov: 180      # [deg]
    keep_ordered: true

    topic:
      depth_in: "oak/stereo/image_raw"
      depth_camera_info_in: "oak/stereo/camera_info"
      points_out: "oak/stereo/pcl_filtered"
      points_over_max_range_out: "oak/stereo/points_over_max_range" # used if non-empty and range_clip used

    filter:
      downsample:
        step:
          row: 1 # used if >1, maintains ordering if keep_ordered=true
          col: 1 # used if >1, maintains ordering if keep_ordered=true
      range_clip:
        min: 0.1
        max: 6.0 # used if >0, maintains ordering if keep_ordered=true
      voxel_grid:
        resolution: 0.1 # used if >0, BREAKS ordering even if keep_ordered=true
      radius_outlier:
        radius: 0.0 # used if both >0, maintains ordering if keep_ordered=true
        neighbors: 2
      minimum_grid:
        resolution: 0.0 # used if >0, BREAKS ordering even if keep_ordered=true
      bilateral:
        sigma_S: 0.0 # used if both >0, BREAKS ordering even if keep_ordered=true
        sigma_R: 0.005 # crashes with bad_alloc error

